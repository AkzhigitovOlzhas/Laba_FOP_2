#include <iostream>
#include <string>
#include <cmath>
#include<iomanip>
using namespace std;

const double pi = 3.14;

void f1(double a, double b, double *g, double *s);
void f2(double r, double h, double &S, double &ob);
void f3(double rub, double dol, double kol_som, double *kol_dol, double *kol_rub);
double Cels(double t);
double Faren(double t);
int quality_Points(int n);
int time(int h, int m, int s);
int tripleCallByValue(int c);
int tripleByReference(int *c1);

int main() {
	setlocale(0, "rus");

	//// ПЕРВОЕ ЗАДАНИЕ
	/*double a, b, gipot, plosh;
	cout << "Введите первый катет: "; cin >> a;
	cout << "Введите второй катет: "; cin >> b;
	f1(a, b, &gipot, &plosh);
	cout << "Площадь треугольника: " << plosh << endl;
	cout << "Гипотинуза: " << gipot << endl;*/
	
	//ВТОРОЕ ЗАДАНИЕ
	/*double a, b, S, ob;
	cout << "Введите радиус: "; cin >> a;
	cout << "Введите высоту цилиндра: "; cin >> b;
	f2(a, b, S, ob);
	cout << "Площадь: " << S << endl;
	cout << "Объем: " << ob << endl;*/

	//ТРЕТЬЕ ЗАДАНИЕ
	/*double kurs_rub= 1.09, kurs_dol= 69.85, kol_som, kol_rub=0, kol_dol=0;
	cout << "Введите количество денег: "; cin >> kol_som;
	f3(kurs_rub, kurs_dol, kol_som, &kol_dol, &kol_rub);
	cout << kol_som << " сом = " << kol_dol << " доларов " << endl;
	cout << kol_som << " сом = " << kol_rub << " рублей " << endl;*/

	//ЧЕТВЕРТОЕ ЗАДАНИЕ
	/*int ch, min, sek;
	cout << "Введите текущее время в формате ч.м.с : " << endl;
	cin >> ch >> min >> sek;
	cout << "Прошло секунд после 12:00 : " ;
	cout << time(ch, min, sek) << endl;*/


	//ПЯТОЕ ЗАДАНИЕ
	/*cout << "\t  Цельсии в франгейт\tФрангейт в цельсии" << endl << endl;
	for (int i = 0,j=32; i <= 100,j<=212; i++,j++) {
		if (i <= 100)
			cout << setw(3) << left << "\t" << i << " - " << Cels(i) << "\t\t";
		if (j <= 132)
			cout << setw(3) << left << j << " - " << Faren(j) << "\n";
		else
			cout << "\t\t\t\t" << setw(3) << left << j << " - " << Faren(j) << "\n";
	}*/
	
	//ШЕСТОЕ ЗАДАНИЕ
	/*int n = 0;
	cout << "Введите среднию оценку студента: "; cin >> n;
	cout << "Оценка: " << quality_Points(n) << endl;*/

	//Седьмое задание
	/*int count = 10;
	cout << tripleCallByValue(count) << endl;
	cout << tripleByReference(&count) << endl;*/

	system("pause");
	return 0;
}

//// ПЕРВОЕ ЗАДАНИЕ
//1. Даны два катета прямоугольного треугольника.Написать
//функцию, определяющую гипотенузу и площадь треугольника.Функция не
//должна возвращать значение.Результат передается в главную программу main
//через список параметров.Функция должна иметь 4 параметра: 1 - й катет, 2 - й
//катет, гипотенузу, площадь.Реализовать передачу двух последних
//параметров по ссылке и по указателю.
void f1(double a, double b, double *g, double *s) {
	*s = (0.5) * a*b;
	*g = sqrt(pow(a, 2) + pow(b, 2));
}
//ВТОРОЕ ЗАДАНИЕ
//2. Даны радиус основания и высота цилиндра.Написать функцию,
//вычисляющую площадь основания и объем цилиндра.Результат в главную
//программу передается через список параметров по указателю или по ссылке.
void f2(double r, double h, double &S, double &V) {
	S = 2 * pi*r * (r + h);
	V = pi * pow(r, 2)*h;
}
//ТРЕТЬЕ ЗАДАНИЕ
//3. Даны курсы доллара и рубля к сому.Написать функцию,
//определяющую количество денег в долларах и рублях.Функция имеет 5
//параметров: курс доллара, курс рубля, количество денег в сомах, в долларах и
//	рублях.
void f3(double rub, double dol, double kol_som, double *kol_dol, double *kol_rub) {
	*kol_dol = kol_som / dol;
	*kol_rub = kol_som / rub;

}
//ЧЕТВЕРТОЕ ЗАДАНИЕ
//4. Напишите функцию, которая воспринимает время как три
//целых аргумента(часы, минуты я секунды) и возвращает количество се
//кунд, прошедших со времени, когда часы в последний раз показали 12
//Используйте эту функцию для вычисления интервала времени в секундах
//между двумя моментами, находящимися внутри двенадцатичасового цикла
int time(int h, int m, int s) {
	if (h > 24 || h < 0 || m > 60 || m < 0 || s >60 || s < 0)
		return -1;
	if (h >= 12)
	{
		h -= 12;
	}
	return h * 60 * 60 + m * 60 + s;

	return s;
}

//ПЯТОЕ ЗАДАНИЕ
//5. Разработайте следующие целые функции :
//a) функцию Celsius, которая возвращает температуру по Цельсию,
//эквивалентную температуре по Фаренгейту;
//b) функцию Fahrenheit, которая возвращает температуру по Фарен -
//гейту, эквивалентную температуре по Цельсию;
//c) используйте эти функции для написания программы, которая
//печатает таблицу, показывающую эквивалент по Фаренгейту всех
//температур по Цельсию от 0 до 100 градусов и эквивалент по Цельсию всех
//температур по Фаренгейту от 32 до 212 градусов.Сделайте листинг в
//аккуратном табулированном формате, с минимальным количеством строк
//при сохранении хорошей читаемости.
double Cels(double t) {
	return (t * 1.800) + 32;
}
double Faren(double t) {
	return 5 * (t-32)/9;
}
//ШЕСТОЕ ЗАДАНИЕ
//6. Напишите функцию quality_Points, которая вводит среднюю
//оценку студентов и если она в диапазоне 90 - 100, то возвращает 4, если в
//диапазоне 80 - 89, возвращает 3, если в диапазоне 70 - 79, возвращает 2, если
//в диапазоне 60 - 69, возвращает 1, и если средняя оценка меньше 60, то
//возвращает 0.
int quality_Points(int n) {
	if (n >= 90 && n <= 100) {
		return 4;
	}
	else if (n >= 80 && n <= 89) {
		return 3;
	}
	else if (n >= 70 && n <= 79) {
		return 2;
	}
	else if (n >= 60 && n <= 69) {
		return 1;
	}
	else {
		return 0;
	}
	
}
//7. Напишите программу на C++ с двумя указанными ниже
//альтернативными функциями, каждая из которых просто утcраивает
//переменную count, определенную в main.Затем сравните и
//противопоставьте эти два подхода.Вот эти две функции :
//a) функция tripleCallByValue, в которую передается копия count
//по значению, в функции эта копия утраивается и возвращается
//соответствующее значение;
//
//
//b) функция tripleByReference, в которую передается count по ссылке
//посредством ссылочного параметра, а функция утраивает исходную копию
//count через ее псевдоним(т.е.ссылочный параметр).
int tripleCallByValue(int c) {
	return c;
}
int tripleByReference(int *c1) {
	return *c1;
}
